import{config as e,useSpring as t,a as i}from"@react-spring/web";import l,{Children as a,useEffect as n}from"react";const s=({active:e=!1,delay:t=50,contentSpringConfig:i,beltSpringConfig:n,beltClassName:s,beltStyle:r,children:o,className:m,style:y})=>l.createElement("div",{className:m,style:{alignItems:"flex-start",display:"flex",flexDirection:"column",...y}},a.map(o,((a,o)=>l.createElement(c,{key:o,active:e,delay:"function"==typeof t?t(o):o*t,contentSpringConfig:i,beltSpringConfig:n,beltClassName:s,beltStyle:r},a)))),r={...e.default},o={mass:.5,tension:170,friction:15,clamp:!0},c=({active:e,delay:a,contentSpringConfig:s={...r},beltSpringConfig:c={...o},beltClassName:m,beltStyle:y,children:d})=>{const[f,g]=t((()=>({visibility:"hidden",x:"-0.5em",config:s}))),[b,p]=t((()=>({x:"-100.5%",config:c})));return n((()=>{if(e)p.start({to:async e=>{await e({x:"0%"}),g.start({x:"0em",visibility:"visible"}),await e({x:"100.5%"})},delay:a});else{if("-100.5%"===b.x.get())return;p.start({to:async e=>{g.start({x:"-0.5em"}),await e({x:"0%"}),g.start({visibility:"hidden"}),await e({x:"-100.5%"})},delay:a})}}),[e,a,p,g]),l.createElement("div",{style:{position:"relative",overflow:"hidden"}},l.createElement(i.div,{style:{position:"relative",...f}},d),l.createElement(i.div,{className:m,style:{background:"currentColor",blockSize:"100%",inlineSize:"100%",insetBlockStart:0,position:"absolute",...y,...b}}))};export{s as SlideInOut,o as defaultBeltSpringConfig,r as defaultContentSpringConfig};
//# sourceMappingURL=index.js.map
